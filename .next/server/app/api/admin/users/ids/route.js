(()=>{var e={};e.id=7381,e.ids=[7381],e.modules={3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},64864:(e,r,t)=>{"use strict";t.r(r),t.d(r,{patchFetch:()=>l,routeModule:()=>p,serverHooks:()=>x,workAsyncStorage:()=>d,workUnitAsyncStorage:()=>c});var s={};t.r(s),t.d(s,{GET:()=>u});var n=t(96559),o=t(48088),i=t(37719),a=t(32190);async function u(){try{return a.NextResponse.json({ids:["1","2","3","4","5"]})}catch(e){return console.error("Error fetching user IDs:",e),a.NextResponse.json({error:"Failed to fetch user IDs"},{status:500})}}let p=new n.AppRouteRouteModule({definition:{kind:o.RouteKind.APP_ROUTE,page:"/api/admin/users/ids/route",pathname:"/api/admin/users/ids",filename:"route",bundlePath:"app/api/admin/users/ids/route"},resolvedPagePath:"D:\\Project\\frontend\\app\\api\\admin\\users\\ids\\route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:d,workUnitAsyncStorage:c,serverHooks:x}=p;function l(){return(0,i.patchFetch)({workAsyncStorage:d,workUnitAsyncStorage:c})}},78335:()=>{},96487:()=>{}};var r=require("../../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[4447,580],()=>t(64864));module.exports=s})();